package medicine.report;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import medicine.dao.ClientDao;
import medicine.model.Client;
import medicine.util.ReportUtil;

public class PaymentReportUI extends javax.swing.JInternalFrame {

    private HashMap hashMap;
    private ReportUtil reportViewer;
    private List<Client> customerList = new ArrayList<>();

    public PaymentReportUI() {
        initComponents();
        cbClient.removeAllItems();

        cbClient.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                if (e.getKeyCode() != 38 && e.getKeyCode() != 40 && e.getKeyCode() != 10) {
                    String a = cbClient.getEditor().getItem().toString();
                    String formatedString = a.toUpperCase();
                    cbClient.removeAllItems();
                    cbClient.addItem(null);

                    int st = 0;
                    int clientTP = 1;
                    
                    if (rbStore.isSelected()) {
                        clientTP = 2;
                    } else if (rbRep.isSelected()) {
                        clientTP = 3;
                    }

                    if (formatedString.length() >= 3) {
                        ClientDao clientDao = new ClientDao();
                        for (Client c : clientDao.getMatch(formatedString, clientTP)) {
                            cbClient.addItem(c);
                            st++;
                        }
                    }

                    cbClient.getEditor().setItem(a);
                    cbClient.hidePopup();
                    if (st != 0) {
                        cbClient.showPopup();
                    }
                }
            }
        });
    }

    public void loadClientList(int type) {
        ClientDao clientDao = new ClientDao();
        customerList = clientDao.display(type);
        cbClient.removeAllItems();
        for (Client c : customerList) {
            cbClient.addItem(c);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rbCustomer = new javax.swing.JRadioButton();
        rbStore = new javax.swing.JRadioButton();
        rbRep = new javax.swing.JRadioButton();
        cbClient = new javax.swing.JComboBox();
        btnFind = new javax.swing.JButton();
        rbPP = new javax.swing.JCheckBox();
        rbSP = new javax.swing.JCheckBox();
        desktopPane = new javax.swing.JDesktopPane();

        setClosable(true);
        setIconifiable(true);
        setTitle("PAYMENT REPORTS");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        buttonGroup1.add(rbCustomer);
        rbCustomer.setSelected(true);
        rbCustomer.setText("Customer");
        rbCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCustomerActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbStore);
        rbStore.setText("Store");
        rbStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbStoreActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbRep);
        rbRep.setText("Representative");
        rbRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRepActionPerformed(evt);
            }
        });

        cbClient.setEditable(true);

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbPP);
        rbPP.setText("PP");

        buttonGroup2.add(rbSP);
        rbSP.setText("SP");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbStore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbRep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbClient, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbPP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbSP)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbCustomer)
                    .addComponent(rbStore)
                    .addComponent(rbRep)
                    .addComponent(cbClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind)
                    .addComponent(rbPP)
                    .addComponent(rbSP))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPane.setLayout(desktopPaneLayout);
        desktopPaneLayout.setHorizontalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(desktopPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desktopPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCustomerActionPerformed
        loadClientList(1);
        cbClient.setSelectedIndex(-1);
    }//GEN-LAST:event_rbCustomerActionPerformed

    private void rbStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbStoreActionPerformed
        loadClientList(2);
        cbClient.setSelectedIndex(-1);
    }//GEN-LAST:event_rbStoreActionPerformed

    private void rbRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRepActionPerformed
        loadClientList(3);
        cbClient.setSelectedIndex(-1);
    }//GEN-LAST:event_rbRepActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed

        Client client = (Client) cbClient.getSelectedItem();
        DecimalFormat df = new DecimalFormat("00000000000");
        String clientIdFormat = df.format(client.getClientId());
        String customerName = client.getFirstName();
        if (client.getMobile().length() != 0) {
            customerName = customerName + " || " + client.getMobile();
        }
        hashMap = new HashMap();
        hashMap.put("TITLE", client.getFirstName().toUpperCase() + " PAYMENT");
        hashMap.put("CLIENT_ID", client.getClientId());
        hashMap.put("CLIENT_FORMAT_ID", "CLI".concat(clientIdFormat));
        hashMap.put("CLIENT_NAME", customerName);
        reportViewer = new ReportUtil("reports/CLIENT_PAYMENT_REPORT.jasper", hashMap);
        reportViewer.setSize(desktopPane.getWidth(), desktopPane.getHeight());
        desktopPane.removeAll();
        desktopPane.add(reportViewer);
        try {
            reportViewer.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(PaymentReportUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFindActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cbClient;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rbCustomer;
    private javax.swing.JCheckBox rbPP;
    private javax.swing.JRadioButton rbRep;
    private javax.swing.JCheckBox rbSP;
    private javax.swing.JRadioButton rbStore;
    // End of variables declaration//GEN-END:variables
}
