package medicine.report;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.PropertyVetoException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import medicine.dao.ClientDao;
import medicine.dao.CommonDao;
import medicine.dao.PurchaseDao;
import medicine.model.Client;
import medicine.model.PurchaseMaster;
import medicine.util.ReportUtil;

public final class PurchaseReportUI extends javax.swing.JInternalFrame {

    private ReportUtil reportViewer;
    private PurchaseDao purchaseDao;
    private HashMap hashMap = new HashMap();
    private Client client;
    private List<Client> customerList = new ArrayList<>();
    private List<PurchaseMaster> purchaseList = new ArrayList<>();
    private JTable dataTable;

    public PurchaseReportUI() {
        initComponents();
        loadClientList();
        cbRepresentative.setSelectedIndex(-1);

    }

    public void loadClientList() {
        ClientDao clientDao = new ClientDao();
        customerList = clientDao.display(3);
        cbRepresentative.removeAllItems();
        for (Client c : customerList) {
            cbRepresentative.addItem(c);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfPurchaseId = new javax.swing.JTextField();
        btnFindPurchaseById = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbRepresentative = new javax.swing.JComboBox();
        btnFindByRep = new javax.swing.JButton();
        btnFindAll = new javax.swing.JButton();
        desktopPane = new javax.swing.JDesktopPane();

        setClosable(true);
        setIconifiable(true);
        setTitle("PURCHASE REPORTS");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("PURCHASE ID");

        btnFindPurchaseById.setText("Find");
        btnFindPurchaseById.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindPurchaseByIdActionPerformed(evt);
            }
        });

        jLabel5.setText("Representative");

        cbRepresentative.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnFindByRep.setText("Find");
        btnFindByRep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindByRepActionPerformed(evt);
            }
        });

        btnFindAll.setText("Find All");
        btnFindAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPurchaseId, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFindPurchaseById, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbRepresentative, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFindByRep, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFindAll, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfPurchaseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindPurchaseById)
                    .addComponent(jLabel5)
                    .addComponent(cbRepresentative, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindByRep)
                    .addComponent(btnFindAll))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPane.setLayout(desktopPaneLayout);
        desktopPaneLayout.setHorizontalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(desktopPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desktopPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindPurchaseByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindPurchaseByIdActionPerformed

        String purchaseId = tfPurchaseId.getText();

        if (!purchaseId.trim().equals("")) {
            showPaarticularPurchase(purchaseId);
        } else {
            JOptionPane.showMessageDialog(this, "Insert purchase id ???");
        }
    }//GEN-LAST:event_btnFindPurchaseByIdActionPerformed

    private void btnFindByRepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindByRepActionPerformed

        JInternalFrame frame = new JInternalFrame();
        DefaultTableModel dtm = new DefaultTableModel(new String[]{"", "", "", "", "", ""}, 0);
        dataTable = new JTable();

        dataTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent me) {
                JTable table = (JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 2) {
                    String invoiceID = (String) table.getValueAt(row, 0);
                    showPaarticularPurchase(invoiceID);
                }
            }
        });

        dataTable.setRowHeight(22);

        dtm.addRow(new Object[]{
            "SN", "REPRESENTATIVE", "COMPANY", "PAID AMOUNT", "DUE AMOUNT", "DATE"
        });

        // add row dynamically into the table  
        purchaseDao = new PurchaseDao();
        purchaseList = purchaseDao.display();
        client = (Client) cbRepresentative.getSelectedItem();
        int i = 1;
        for (PurchaseMaster master : purchaseDao.display()) {
            if (master.getClient().getClientId() == client.getClientId()) {
                dtm.addRow(new Object[]{
                    master.getInvoiceNo(),
                    master.getClient(),
                    master.getClient().getCompany().getCompanyName(),
                    master.getPaidAmount(),
                    master.getDueAmount(),
                    master.getPurchaseDate()
                });
                i++;
            }

        }

        dataTable.setModel(dtm);
        dataTable.setShowGrid(true);

        JScrollPane scrollPane = new JScrollPane(dataTable);

        frame.add(scrollPane);
        frame.setTitle("PURCHASE LIST");
        frame.setVisible(true);
        frame.setClosable(true);
        frame.setSize(desktopPane.getWidth(), desktopPane.getHeight());
        desktopPane.add(frame);
        try {
            frame.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(PurchaseReportUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFindByRepActionPerformed

    private void btnFindAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindAllActionPerformed

        JInternalFrame frame = new JInternalFrame();
        DefaultTableModel dtm = new DefaultTableModel(new String[]{"", "", "", "", "", ""}, 0);
        dataTable = new JTable();

        dataTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent me) {
                JTable table = (JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 2) {
                    String invoiceID = table.getValueAt(row, 0).toString();
                    showPaarticularPurchase(invoiceID);
                }
            }
        });

        dataTable.setRowHeight(22);

        dtm.addRow(new Object[]{
            "PURCHASE ID", "INVOICE NO", "REPRESENTATIVE", "PAID AMOUNT", "DUE AMOUNT", "DATE"
        });

        // add row dynamically into the table  
        purchaseDao = new PurchaseDao();
        purchaseList = purchaseDao.display();
        client = (Client) cbRepresentative.getSelectedItem();
        int i = 1;
        for (PurchaseMaster master : purchaseDao.display()) {
            dtm.addRow(new Object[]{
                master.getPurchaseId(),
                master.getInvoiceNo(),
                (master.getClient() != null) ? master.getClient() : "",
                master.getPaidAmount(),
                master.getDueAmount(),
                master.getPurchaseDate()
            });

        }

        dataTable.setModel(dtm);
        dataTable.setShowGrid(true);

        JScrollPane scrollPane = new JScrollPane(dataTable);

        frame.add(scrollPane);
        frame.setTitle("PURCHASE LIST");
        frame.setVisible(true);
        frame.setClosable(true);
        frame.setSize(desktopPane.getWidth(), desktopPane.getHeight());
        desktopPane.add(frame);
        try {
            frame.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(PurchaseReportUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnFindAllActionPerformed

    public void showPaarticularPurchase(String purchaseId) {
        purchaseDao = new PurchaseDao();
        PurchaseMaster master = purchaseDao.find(purchaseId);
        if (master.getPurchaseId() != 0) {
            hashMap = new HashMap();
            //DecimalFormat df = new DecimalFormat("00000000000");
            //String purchaseIdFormat = df.format(Long.parseLong(purchaseId));

            hashMap.put("PURCHASE_ID", master.getPurchaseId());
            hashMap.put("FORMATED_PURCHASE_ID", "HDH-P" + purchaseId);
            hashMap.put("REPRES", (master.getClient() != null) ? master.getClient().toString() : "");
            hashMap.put("PURCHASE_DATE", master.getPurchaseDate());
            hashMap.put("ADVANCE_PAYMENT", master.getPaidAmount());
            hashMap.put("DUE_AMOUNT", CommonDao.getTwoDecimal(master.getDueAmount()));

            reportViewer = new ReportUtil("reports/PARTICULAR_PURCHASE_VOUCHER.jasper", hashMap);
            reportViewer.setSize(desktopPane.getWidth(), desktopPane.getHeight());
            desktopPane.removeAll();
            desktopPane.add(reportViewer);
            try {
                reportViewer.setSelected(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(SalesReportUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "No Such record found !!!");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFindAll;
    private javax.swing.JButton btnFindByRep;
    private javax.swing.JButton btnFindPurchaseById;
    private javax.swing.JComboBox cbRepresentative;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tfPurchaseId;
    // End of variables declaration//GEN-END:variables
}
