package medicine.ui;

import java.awt.HeadlessException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import medicine.dao.ClientDao;
import medicine.dao.DistrictDao;
import medicine.exception.UncaughtError;
import medicine.model.Client;
import medicine.model.District;
import medicine.model.User;

public final class CustomerForm extends javax.swing.JInternalFrame {

    private final User user;
    private Client client;
    private ClientDao clientDao;

    public CustomerForm(User user) {
        initComponents();
        this.user = user;
        loadDistrictList();
        clearForm();
        enableButtons();

        cbSearch.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                if (e.getKeyCode() != 38 && e.getKeyCode() != 40 && e.getKeyCode() != 10) {
                    String a = cbSearch.getEditor().getItem().toString();
                    String formatedString = a.toUpperCase();
                    cbSearch.removeAllItems();
                    cbSearch.addItem(null);

                    int st = 0;

                    if (formatedString.length() >= 3) {
                        ClientDao clientDao = new ClientDao();
                        for (Client c : clientDao.getMatch(formatedString, 1)) {
                            cbSearch.addItem(c);
                            st++;
                        }
                    }

                    cbSearch.getEditor().setItem(a);
                    cbSearch.hidePopup();
                    if (st != 0) {
                        cbSearch.showPopup();
                    }
                }
            }
        });
    }

    public void loadDistrictList() {
        DistrictDao districtDao = new DistrictDao();
        cbPresentDisctrict.removeAllItems();
        cbPermanentDistrict.removeAllItems();
        for (District d : districtDao.display()) {
            cbPresentDisctrict.addItem(d);
            cbPermanentDistrict.addItem(d);
        }
    }

    public void enableButtons() {
        btnSave.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
    }

    public void disableButtons() {
        btnSave.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
    }

    public void clearForm() {
        tfAddress.setText("");
        tfAge.setText("");
        tfEmail.setText("");
        tfFirstName.setText("");
        tfMobile.setText("");
        tfPermanentAddress.setText("");
        tfStartingDue.setText("");
        cbDisplay.setSelectedIndex(0);
        cbGender.setSelectedIndex(0);
        cbPermanentDistrict.setSelectedItem(null);
        cbPresentDisctrict.setSelectedItem(null);
        cbBloodGroup.setSelectedItem(null);
        cbSearch.removeAllItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbSearch = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        tfFirstName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        tfMobile = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        cbBloodGroup = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        cbGender = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        chDateOfBirth = new com.toedter.calendar.JDateChooser();
        jLabel22 = new javax.swing.JLabel();
        tfAge = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        tfStartingDue = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        cbDisplay = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        cbPresentDisctrict = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        tfAddress = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        cbPermanentDistrict = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        tfPermanentAddress = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("CUSTOMER");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbSearch.setEditable(true);
        cbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbSearch, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel15.setText("Customer Name");

        tfFirstName.setText("jTextField1");

        jLabel17.setText("Email");

        tfEmail.setText("jTextField3");

        jLabel18.setText("Mobile");

        tfMobile.setText("jTextField4");

        jLabel19.setText("Blood Group");

        cbBloodGroup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));

        jLabel20.setText("Gender");

        cbGender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));

        jLabel21.setText("Birth Date");

        jLabel22.setText("Age");

        tfAge.setText("jTextField5");

        jLabel23.setText("Starting Due");

        tfStartingDue.setText("jTextField6");

        jLabel24.setText("Display");

        cbDisplay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Show", "Hide" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel21)
                    .addComponent(jLabel19)
                    .addComponent(jLabel17)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfEmail)
                            .addComponent(cbBloodGroup, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chDateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(tfStartingDue))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20)
                            .addComponent(jLabel22)
                            .addComponent(jLabel24))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfMobile, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                            .addComponent(cbGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfAge)
                            .addComponent(cbDisplay, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tfFirstName))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(tfMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(cbBloodGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(cbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chDateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfAge)
                        .addComponent(jLabel22))
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(tfStartingDue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(cbDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel25.setText("Present District");

        cbPresentDisctrict.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel26.setText("Present Address");

        tfAddress.setText("jTextField7");

        jLabel27.setText("Permanent District");

        cbPermanentDistrict.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel28.setText("Permanent Address");

        tfPermanentAddress.setText("jTextField8");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel28)
                    .addComponent(jLabel27)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbPresentDisctrict, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfAddress)
                    .addComponent(cbPermanentDistrict, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfPermanentAddress))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(cbPresentDisctrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(tfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(cbPermanentDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(tfPermanentAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        String firstName = tfFirstName.getText();

        if (firstName.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Insert First name ???");
        } else if (cbGender.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Select Gender ???");
        } else {
            try {
                client = new Client();
                client.setAddress(tfAddress.getText());
                if (tfAge.getText().trim().equals("")) {
                    client.setAge(0);
                } else {
                    client.setAge(Integer.parseInt(tfAge.getText()));
                }
                if (cbBloodGroup.getSelectedItem() != null) {
                    client.setBloodGroup(cbBloodGroup.getSelectedItem().toString());
                } else {
                    client.setBloodGroup("");
                }
                client.setClientType(1);
                client.setCompany(null);
                client.setDateOfBirth(chDateOfBirth.getDate());
                if (cbDisplay.getSelectedIndex() == 0) {
                    client.setDisplay(1);
                } else {
                    client.setDisplay(0);
                }
                client.setEmail(tfEmail.getText());
                client.setFirstName(firstName);
                client.setGender(cbGender.getSelectedItem().toString());
                client.setMobile(tfMobile.getText());
                client.setPermanentAddress(tfPermanentAddress.getText());
                if (cbPresentDisctrict.getSelectedItem() != null) {
                    client.setPermanentDistrict((District) cbPermanentDistrict.getSelectedItem());
                }
                if (cbPresentDisctrict.getSelectedItem() != null) {
                    client.setPresentDistrict((District) cbPresentDisctrict.getSelectedItem());
                }
                if (tfStartingDue.getText().trim().equals("")) {
                    client.setStartingDue(0);
                } else {
                    client.setStartingDue(Double.parseDouble(tfStartingDue.getText()));
                }
                client.setUser(user);
                clientDao = new ClientDao();
                clientDao.save(client);
                JOptionPane.showMessageDialog(this, "Record saved successfully.");
                enableButtons();
                clearForm();

            } catch (HeadlessException | NumberFormatException e) {
                System.out.println("Error.." + e);
                JOptionPane.showMessageDialog(this, "Error...");
            }
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        String firstName = tfFirstName.getText();

        if (firstName.trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Insert First name ???");
        } else if (cbGender.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Select Gender ???");
        } else {
            try {
                client.setAddress(tfAddress.getText());
                if (tfAge.getText().trim().equals("")) {
                    client.setAge(0);
                } else {
                    client.setAge(Integer.parseInt(tfAge.getText()));
                }
                if (cbBloodGroup.getSelectedItem() != null) {
                    client.setBloodGroup(cbBloodGroup.getSelectedItem().toString());
                } else {
                    client.setBloodGroup("");
                }
                client.setClientType(1);
                client.setCompany(null);
                client.setDateOfBirth(chDateOfBirth.getDate());
                if (cbDisplay.getSelectedIndex() == 0) {
                    client.setDisplay(1);
                } else {
                    client.setDisplay(0);
                }
                client.setEmail(tfEmail.getText());
                client.setFirstName(firstName);
                client.setGender(cbGender.getSelectedItem().toString());
                client.setMobile(tfMobile.getText());
                client.setPermanentAddress(tfPermanentAddress.getText());
                if (cbPresentDisctrict.getSelectedItem() != null) {
                    client.setPermanentDistrict((District) cbPermanentDistrict.getSelectedItem());
                }
                if (cbPresentDisctrict.getSelectedItem() != null) {
                    client.setPresentDistrict((District) cbPresentDisctrict.getSelectedItem());
                }
                if (tfStartingDue.getText().trim().equals("")) {
                    client.setStartingDue(0);
                } else {
                    client.setStartingDue(Double.parseDouble(tfStartingDue.getText()));
                }
                client.setUser(user);
                clientDao = new ClientDao();
                clientDao.update(client);
                JOptionPane.showMessageDialog(this, "Record updated successfully.");
                enableButtons();
                clearForm();

            } catch (HeadlessException | NumberFormatException e) {
                System.out.println("Error.." + e);
                JOptionPane.showMessageDialog(this, "Error...");
            } catch (UncaughtError er) {
                System.out.println("Error..." + er);
                JOptionPane.showMessageDialog(this, "Error !!!");
            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        int check = JOptionPane.showConfirmDialog(this, "Are you sure ???");
        if (check == 0) {
            try {
                clientDao = new ClientDao();
                if (clientDao.delete(client)) {
                    JOptionPane.showMessageDialog(this, "Deleted Successfully.");
                    enableButtons();
                    clearForm();
                } else {
                    JOptionPane.showMessageDialog(this, "Cannot Delete !!!");
                }
            } catch (UncaughtError er) {
                System.out.println("Error..." + er);
                JOptionPane.showMessageDialog(this, "Error !!!");
            }

        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed

        clearForm();
        enableButtons();
    }//GEN-LAST:event_btnClearActionPerformed

    private void cbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchActionPerformed

        try {
            try {

                client = (Client) cbSearch.getSelectedItem();

                if (client.getClientId() != 0) {
                    disableButtons();
                    tfAddress.setText(client.getAddress());
                    tfAge.setText("" + client.getAge());
                    tfEmail.setText(client.getEmail());
                    tfFirstName.setText(client.getFirstName());
                    tfMobile.setText(client.getMobile());
                    tfPermanentAddress.setText(client.getPermanentAddress());
                    tfStartingDue.setText("" + client.getStartingDue());
                    chDateOfBirth.setDate(client.getDateOfBirth());

                    cbBloodGroup.setSelectedItem(client.getBloodGroup());

                    if (client.getDisplay() == 1) {
                        cbDisplay.setSelectedIndex(0);
                    } else {
                        cbDisplay.setSelectedIndex(1);
                    }

                    cbGender.setSelectedItem(client.getGender());

                    if (client.getBloodGroup() != null) {
                        cbBloodGroup.setSelectedItem(client.getBloodGroup());
                    }

                    if (client.getPresentDistrict().getDistrictId() != 0) {
                        cbPresentDisctrict.getModel().setSelectedItem(client.getPresentDistrict());
                    }

                    if (client.getPermanentDistrict().getDistrictId() != 0) {
                        cbPermanentDistrict.getModel().setSelectedItem(client.getPermanentDistrict());
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "No Such Customer Found !!!");
                }
            } catch (NumberFormatException | HeadlessException e) {
                System.out.println("Error..." + e);
                JOptionPane.showMessageDialog(this, "Error...");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbBloodGroup;
    private javax.swing.JComboBox cbDisplay;
    private javax.swing.JComboBox cbGender;
    private javax.swing.JComboBox cbPermanentDistrict;
    private javax.swing.JComboBox cbPresentDisctrict;
    private javax.swing.JComboBox cbSearch;
    private com.toedter.calendar.JDateChooser chDateOfBirth;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField tfAddress;
    private javax.swing.JTextField tfAge;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfMobile;
    private javax.swing.JTextField tfPermanentAddress;
    private javax.swing.JTextField tfStartingDue;
    // End of variables declaration//GEN-END:variables
}
